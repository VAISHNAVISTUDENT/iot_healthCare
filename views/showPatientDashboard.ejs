<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Patient Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
  <link rel="stylesheet" href="/showPatient.css">
</head>
<body>
<style>
  .welcome-card {
  background: linear-gradient(135deg, #f8f9fa, #ffffff);
  border-radius: 20px;
  padding: 24px 32px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  margin-bottom: 20px;
  transition: all 0.3s ease;
}

.welcome-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
}

.highlight-name {
  color: #007bff;
  font-weight: 600;
}

.welcome-card p {
  font-size: 14px;
  color: #444;
}

.status {
  margin-top: 10px;
  font-weight: bold;
  font-size: 14px;
  color: red; /* Set dynamically with JS */
}

.doctor-img {
  width: 120px;
  height: auto;
  border-radius: 12px;
  object-fit: cover;
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);
}
.metric-card {
  background: #fff;
  border-radius: 16px;
  padding: 20px;
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.08);
  transition: all 0.3s ease-in-out;
}

.metric-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 10px 24px rgba(0, 0, 0, 0.1);
}

.circle-wrap {
  position: relative;
  width: 80px;
  height: 80px;
  margin: 0 auto 10px auto;
}

.circle-bg {
  stroke: #e6e6e6;
}

.circle-progress {
  stroke: #ffc107;
  stroke-linecap: round;
  transform: rotate(-90deg);
  transform-origin: center;
  transition: stroke-dashoffset 1s ease;
}

.icon-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 24px;
}

.metric-label {
  font-weight: 600;
  font-size: 14px;
  margin-top: 8px;
}

.metric-value {
  font-size: 18px;
  font-weight: bold;
  margin-top: 4px;
}

.metric-note {
  font-size: 12px;
  color: #666;
}

</style>

<div class="container my-4">
  <!-- Welcome Card -->
  <div class="welcome-card d-flex justify-content-between align-items-center">
    <div>
      <h4>Hello, <span class="highlight-name"><%= patient.Name %></span></h4>
      <p class="mb-1"><strong>Age: </strong> <%= patient.Age %></p>
      <p class="mb-1"><strong>Blood Group: </strong> <%= patient.BloodGroup %></p>
      <p class="mb-1"><strong>Gender: </strong> <%= patient.Gender %></p>
      <p class="mb-1"><strong>Status: </strong> <%= patient.Status %></p>
      <p class="mb-0">Is allergic to: <%= ...patient.Allergies %></p>
      <p class="status" id="status">Offline</p>
    </div>
    <div>
      <img src="<%= patient.image %>" alt="Doctor Illustration" class="doctor-img">
    </div>
  </div>

  <!-- Stats Cards -->
  <div class="row g-4 text-center">
    <!-- Heart rate card -->
    <div class="col-md-3 col-sm-6">
      <div class="card card-custom">
        <div class="stat-icon text-danger"><i class="bi bi-heart-pulse"></i></div>
        <div class="stat-title">Heart Rate</div>
        <div class="stat-value text-danger" id="heartRateValue">-- bpm</div>
      </div>
    </div>

    <!-- Body temp card -->
    <div class="col-md-3 col-sm-6">
      <div class="card card-custom">
        <div class="stat-icon text-info"><i class="bi bi-thermometer-half"></i></div>
        <div class="stat-title">Temperature</div>
        <div class="stat-value text-info" id="temperatureValue">-- ¬∞C</div>
      </div>
    </div>

    <!-- Alerts card -->
    <div class="col-md-3 col-sm-6">
      <div class="card card-custom text-start">
        <div class="stat-icon text-danger text-center">
          <i class="bi bi-exclamation-triangle"></i>
        </div>
        <div class="stat-title text-center">Alerts</div>
        <ul class="list-unstyled mb-0 mt-2 small">
          <li class="mb-2 text-danger"><i class="bi bi-capsule me-2"></i>Take medicine on time</li>
          <li class="mb-2 text-info"><i class="bi bi-clock-history me-2"></i>Time for hydration</li>
          <li class="text-success"><i class="bi bi-shield-check me-2"></i>Vitals are stable</li>
        </ul>
      </div>
    </div>

    <!-- General Health Card -->
    <div class="col-md-3 col-sm-6">
      <div class="metric-card text-center">
        <div class="circle-wrap">
          <svg width="80" height="80">
            <circle cx="40" cy="40" r="35" stroke-width="8" class="circle-bg" fill="none" />
            <circle cx="40" cy="40" r="35" stroke-width="8" class="circle-progress health" fill="none" />
          </svg>
          <div class="icon-center text-warning">üßç</div>
        </div>
        <div class="metric-label">General Health</div>
        <div class="metric-value text-warning" id="health-value">--%</div>
        <div class="metric-note" id="health-note"></div>
      </div>
    </div>
    
  </div>

  <!-- New Row: Prescription -->
  <div class="row g-4 mt-2">
    <div class="col-md-6 col-sm-12">
      <div class="card card-custom text-start">
        <div class="d-flex align-items-center mb-3">
          <div class="stat-icon text-primary me-2">
            <i class="bi bi-prescription2"></i>
          </div>
          <h5 class="mb-0">Prescription by Doctor</h5>
        </div>
        <ul class="list-unstyled ms-1 mt-2 small">
          <li class="mb-2"><i class="bi bi-capsule me-2 text-danger"></i><strong>Amoxicillin:</strong> 500mg twice daily after meals</li>
          <li class="mb-2"><i class="bi bi-capsule me-2 text-success"></i><strong>Vitamin D:</strong> Once in the morning</li>
          <li class="mb-2"><i class="bi bi-capsule me-2 text-warning"></i><strong>Paracetamol:</strong> If temperature exceeds 38¬∞C</li>
        </ul>
      </div>
    </div>

    <div class="col-md-6 col-sm-12">
      <div class="card card-custom">
        <div class="stat-title mb-2">Room Air Monitoring</div>
        <canvas id="airQualityChart" height="200"></canvas>
      </div>
    </div>
  </div>
</div>

<!-- Chart.js & Bootstrap -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<!-- Socket.IO Client -->
<script src="/socket.io/socket.io.js"></script>
<script>
  const ctx = document.getElementById('airQualityChart').getContext('2d');
  const airQualityChart = new Chart(ctx, {
    type: 'bar',
    data: {
      labels: ['O‚ÇÇ', 'CO‚ÇÇ', 'Smoke', 'VOCs'],
      datasets: [{
        label: 'Level',
        data: [95, 400, 35, 20],
        backgroundColor: ['#0d6efd', '#dc3545', '#ffc107', '#198754'],
        borderRadius: 8,
      }]
    },
    options: {
      scales: {
        y: {
          beginAtZero: true,
          title: {
            display: true,
            text: 'PPM / %',
            font: {
              size: 14
            }
          }
        }
      },
      plugins: {
        legend: {
          display: false
        }
      }
    }
  });

  const socket = io();

  socket.on('<%= patient.RoomNumber %>', (data) => {
    try {
      const parsed = typeof data === 'string' ? JSON.parse(data) : data;
      
      const statusElement = document.getElementById("status");
      if (statusElement) {
        statusElement.innerHTML = '<p style="color: green;">Online</p>';
      }

      const heartRateElement = document.getElementById("heartRateValue");
      if (heartRateElement) {
        heartRateElement.textContent = `${parsed.pulse || '--'} bpm`;
      }

      const temperatureElement = document.getElementById("temperatureValue");
      if (temperatureElement) {
        temperatureElement.textContent = `${parsed.temp || '--'} ¬∞C`;
      }

      airQualityChart.data.datasets[0].data = [
        parsed.o2 || 95,
        parsed.co2 || 400,
        parsed.smoke || 35,
        parsed.voc || 20,
      ];
      airQualityChart.update();
    } catch (err) {
      console.error("Invalid live data:", err);
    }
  });
</script>
<script>
  // Example sensor values (these would be dynamically set from elsewhere)
  const temp = 39;  // Temperature in ¬∞C
  const o2 = 91;    // Oxygen %
  const pulse = 105;
  const smoke = 60;

  const alertList = document.getElementById("alert-list");

  if (temp > 38) {
    alertList.innerHTML += `<li class="mb-2 text-danger"><i class="bi bi-thermometer-half me-2"></i>High Temperature</li>`;
  }

  if (o2 < 92) {
    alertList.innerHTML += `<li class="mb-2 text-warning"><i class="bi bi-droplet me-2"></i>Low Oxygen Level</li>`;
  }

  if (pulse > 100) {
    alertList.innerHTML += `<li class="mb-2 text-danger"><i class="bi bi-heart-pulse me-2"></i>High Pulse Rate</li>`;
  }

  if (smoke > 50) {
    alertList.innerHTML += `<li class="mb-2 text-danger"><i class="bi bi-wind me-2"></i>Smoke Detected</li>`;
  }

  // Default message if no alerts
  if (alertList.innerHTML === "") {
    alertList.innerHTML = `<li class="mb-2 text-danger"><i class="bi bi-capsule me-2"></i>Take medicine on time</li>
                          <li class="mb-2 text-info"><i class="bi bi-clock-history me-2"></i>Time for hydration</li>
                          <li class="text-success"><i class="bi bi-shield-check me-2"></i>Vitals are stable</li>`;
  }
</script>
<script>
  // Example data (replace with real values from your app)
  const currentHealth = 61;
  const lastWeekHealth = 56;

  const circumference = 2 * Math.PI * 35; // r = 35 from SVG
  const offset = circumference * (1 - currentHealth / 100);

  const progressCircle = document.querySelector(".circle-progress.health");
  const valueText = document.getElementById("health-value");
  const noteText = document.getElementById("health-note");

  // Set the circle stroke dynamically
  progressCircle.setAttribute("stroke-dasharray", circumference);
  progressCircle.setAttribute("stroke-dashoffset", offset);

  // Update text
  valueText.textContent = `${currentHealth}%`;
  const diff = currentHealth - lastWeekHealth;

  if (diff > 0) {
    noteText.innerHTML = `<i class="bi bi-arrow-up-right text-success me-1"></i>${diff}% higher than last week`;
  } else if (diff < 0) {
    noteText.innerHTML = `<i class="bi bi-arrow-down-right text-danger me-1"></i>${Math.abs(diff)}% lower than last week`;
  } else {
    noteText.textContent = `Same as last week`;
  }
</script>

</body>
</html>
